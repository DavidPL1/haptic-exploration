#!/usr/bin/env python

import rospy
from rospkg import RosPack
import xacro

import numpy as np
import os
import os.path as osp

from haptic_exploration import mujoco_config
from haptic_exploration.config import ObjectSet
from haptic_exploration.sample import sample_objects, SamplingConfig
from haptic_exploration.util import deg2rad


if __name__ == '__main__':

    num_splits = rospy.get_param("~num_splits", 1)
    chunk = rospy.get_param("~chunk", 0)
    assert chunk < num_splits, "Chunk must be smaller than num_splits!"

    base_ycb_dir = osp.join(RosPack().get_path('haptic_exploration'), 'assets', 'meshes', 'ycb')
    available_objects = os.listdir(base_ycb_dir)
    available_objects = [x for x in available_objects if osp.isdir(osp.join(base_ycb_dir, x))]
    available_objects = [x for x in available_objects if x in mujoco_config.ycb_objects.values()]
    rospy.loginfo(f"Available objects: {available_objects}")

    available_objects = [list(mujoco_config.ycb_objects.keys())[list(mujoco_config.ycb_objects.values()).index(x)] for x in available_objects]
    rospy.loginfo(f"Available objects: {available_objects}")

    if num_splits > 1:
        splits = np.array_split(available_objects, num_splits)
        chosen_object_ids = splits[chunk]
        chosen_object_dict = {id: mujoco_config.ycb_objects[id] for id in chosen_object_ids}
    else:
        chosen_object_dict = {id: mujoco_config.ycb_objects[id] for id in available_objects}

    sampling_config = SamplingConfig(
        ObjectSet.YCB,
        chosen_object_dict,
        [("x", 21), ("y", 16), ("x_angle", 41)],
        mujoco_config.ycb_glance_area,
        deg2rad(20),
        mujoco_config.ycb_z_buffer,
    )

    sample_objects(sampling_config)
